name: Codecov

on:
  # Temporarily disabled
  # push:
  #   branches:
  #     - develop
  # pull_request:
  #   branches:
  #     - develop
  #   types: [opened, reopened, synchronize, ready_for_review]
  workflow_dispatch:

jobs:
  # Temporarily disabled
  # diff:
  #   if: github.event.pull_request.draft == false
  #   runs-on: [self-hosted]
  #   outputs:
  #     isRust: ${{ steps.diff.outputs.isRust }}
  #   steps:
  #     - uses: actions/checkout@eef61447b9ff4aafe5dcd4e0bbf5d482be7e7871 # pin@v4
  #     - name: Detect Changes
  #       uses: "./.github/actions/diffs"
  #       id: diff

  codecov-grcov:
    name: Generate code coverage
    # Temporarily disabled
    # needs: diff
    # Temporarily disabled
    # if: github.event.pull_request.draft == false && needs.diff.outputs.isRust == 'true'
    runs-on: [self-hosted]
    steps:
      - uses: actions/checkout@eef61447b9ff4aafe5dcd4e0bbf5d482be7e7871 # pin@v4
      - run: rustup component add llvm-tools-preview
      # Enable caching of the 'librocksdb-sys' crate by additionally caching the
      # 'librocksdb-sys' src directory which is managed by cargo
      - name: Install grcov, and cache the binary
        uses: baptiste0928/cargo-install@1cd874a5478fdca35d868ccc74640c5aabbb8f1b # pin@v3.0.0
        with:
          crate: grcov
          locked: true

      - name: Remove old coverage artifacts
        run: |
            if [ -d "./target/grcov-target" ]; then
              rm -rf ./target/grcov-target
              echo "Removed old artifacts"
            else
              echo "No artifacts found"
            fi

      - name: Build
        uses: actions-rs/cargo@ae10961054e4aa8b4aa7dffede299aaf087aa33b # pin@v1.0.3
        with:
          command: build
        env:
          RUSTFLAGS: "-Cinstrument-coverage"
          RUSTDOCFLAGS: "-Cinstrument-coverage"

      - name: Run tests
        env:
          RUSTFLAGS: "-Cinstrument-coverage"
          RUSTDOCFLAGS: "-Cinstrument-coverage"
          LLVM_PROFILE_FILE: "target/grcov-target/codecov-instrumentation-%p-%m.profraw"
        run: |
          mkdir target/grcov-target
          cargo test

      - name: Run grcov
        run: grcov . --binary-path target/debug/ -s . -t lcov --branch --ignore-not-existing --ignore '../**' --ignore '/*' -o target/grcov-target/coverage.lcov

      - name: Create coverage report
        run: |
          cd target/grcov-target
          genhtml -o coverage_report coverage.lcov --verbose --ignore-errors source --synthesize-missing
          tar -czf coverage_report.tgz coverage_report/

      - name: Upload coverage report
        uses: actions/upload-artifact@b4b15b8c7c6ac21ea08fcf65892d2ee8f75cf882 # pin@v4
        if: always()
        with:
          name: coverage_report.tgz
          path: ./target/grcov-target/coverage_report.tgz
          if-no-files-found: error
          retention-days: 30

      - name: Clean up coverage artifacts
        run: |
          if [ -d "./target/grcov-target" ]; then
            rm -rf ./target/grcov-target
            echo "Cleaned up coverage artifacts"
          fi

 