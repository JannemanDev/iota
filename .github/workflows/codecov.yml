name: Code Coverage (grcov)

on:
  # Temporarily disabled
  # push:
  #   branches:
  #     - develop
  # pull_request:
  #   branches:
  #     - develop
  #   types: [opened, reopened, synchronize, ready_for_review]
  workflow_dispatch:

jobs:
  # Temporarily disabled
  # diff:
  #   if: github.event.pull_request.draft == false
  #   runs-on: [self-hosted]
  #   outputs:
  #     isRust: ${{ steps.diff.outputs.isRust }}
  #   steps:
  #     - uses: actions/checkout@eef61447b9ff4aafe5dcd4e0bbf5d482be7e7871 # pin@v4
  #     - name: Detect Changes
  #       uses: "./.github/actions/diffs"
  #       id: diff
  grcov:
    name: Generate code coverage (grcov)
    # Temporarily disabled
    # needs: diff
    # Temporarily disabled
    # if: github.event.pull_request.draft == false && needs.diff.outputs.isRust == 'true'
    runs-on: [self-hosted]
    steps:
      - uses: actions/checkout@eef61447b9ff4aafe5dcd4e0bbf5d482be7e7871 # pin@v4
      - uses: bmwill/rust-cache@fb63fcd7a959767755b88b5af2f5cbf65fb8a127 # pin@v1

      - name: Install grcov
        uses: taiki-e/install-action@grcov # pin@nextest

      - name: Install nextest
        uses: taiki-e/install-action@7e58f89e24a544d88f7a74c6eed8a3df3fd4c658 # pin@nextest

      - name: Update Rust toolchain
        run: rustup update stable

      - name: Install llvm-tools-preview
        run: rustup component add llvm-tools-preview

      - name: Remove old coverage artifacts
        run: |
          if [ -d "./target/grcov" ]; then
            rm -rf ./target/grcov
            echo "Removed old artifacts."
          else
            echo "Target directory is clean."
          fi
           fi

      - name: Build
        uses: actions-rs/cargo@ae10961054e4aa8b4aa7dffede299aaf087aa33b # pin@v1.0.3
        with:
          command: build
        env:
          RUSTFLAGS: "-Cinstrument-coverage"
          RUSTDOCFLAGS: "-Cinstrument-coverage"

      - name: Run tests
        env:
          RUSTFLAGS: "-Cinstrument-coverage"
          RUSTDOCFLAGS: "-Cinstrument-coverage"
          LLVM_PROFILE_FILE: "target/grcov/codecov-instrumentation-%p-%m.profraw"
        run: |
          mkdir -p target/grcov/html
          cargo test

      - name: Run grcov
        run: |
          grcov . --binary-path target/debug/ -s . -t html --branch --ignore-not-existing --ignore '../**' --ignore '/*' -o target/grcov/html

      - name: Upload coverage report
        uses: actions/upload-artifact@b4b15b8c7c6ac21ea08fcf65892d2ee8f75cf882 # pin@v4
        if: always()
        with:
          name: grcov-html
          path: ./target/grcov/html
          if-no-files-found: error
          retention-days: 7
