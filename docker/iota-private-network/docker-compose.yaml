version: "3"

x-common-validator: &common-validator
  image: iota-node
  expose:
    - "8080"
    - "8081/udp"
    - "8084/udp"
  environment: &common-env
    - RUST_BACKTRACE=1
    - RUST_LOG=info,iota_core=info,iota_network=info,iota_node=info,jsonrpsee=error
    - RPC_WORKER_THREAD=12
    - NEW_CHECKPOINT_WARNING_TIMEOUT_MS=30000
    - NEW_CHECKPOINT_PANIC_TIMEOUT_MS=60000
  command: &common-command [
    "/usr/local/bin/iota-node",
    "--config-path",
    "/opt/iota/config/validator.yaml",
  ]
  restart: on-failure
  logging: &common-logging
    driver: "json-file"
    options:
      max-file: "10"
      max-size: "1g"

x-common-fullnode: &common-fullnode
  <<: *common-validator
  command:
    [
      "/usr/local/bin/iota-node",
      "--config-path",
      "/opt/iota/config/fullnode.yaml",
    ]

services:
  validator-0:
    <<: *common-validator
    container_name: validator-0
    hostname: validator-0
    volumes:
      - ./configs/validators/validator-0.yaml:/opt/iota/config/validator.yaml:ro
      - ./configs/genesis/genesis.blob:/opt/iota/config/genesis.blob:ro
      - ./configs/genesis/migration.blob:/opt/iota/config/migration.blob:ro
      - ./data/validator-0:/opt/iota/db:rw

  validator-1:
    <<: *common-validator
    container_name: validator-1
    hostname: validator-1
    volumes:
      - ./configs/validators/validator-1.yaml:/opt/iota/config/validator.yaml:ro
      - ./configs/genesis/genesis.blob:/opt/iota/config/genesis.blob:ro
      - ./configs/genesis/migration.blob:/opt/iota/config/migration.blob:ro
      - ./data/validator-1:/opt/iota/db:rw

  validator-2:
    <<: *common-validator
    container_name: validator-2
    hostname: validator-2
    volumes:
      - ./configs/validators/validator-2.yaml:/opt/iota/config/validator.yaml:ro
      - ./configs/genesis/genesis.blob:/opt/iota/config/genesis.blob:ro
      - ./configs/genesis/migration.blob:/opt/iota/config/migration.blob:ro
      - ./data/validator-2:/opt/iota/db:rw

  validator-3:
    <<: *common-validator
    container_name: validator-3
    hostname: validator-3
    volumes:
      - ./configs/validators/validator-3.yaml:/opt/iota/config/validator.yaml:ro
      - ./configs/genesis/genesis.blob:/opt/iota/config/genesis.blob:ro
      - ./configs/genesis/migration.blob:/opt/iota/config/migration.blob:ro
      - ./data/validator-3:/opt/iota/db:rw

  fullnode-0:
    <<: *common-fullnode
    container_name: fullnode-0
    hostname: fullnode-0
    volumes:
      - ./configs/fullnodes/fullnode-0.yaml:/opt/iota/config/fullnode.yaml:ro
      - ./configs/genesis/genesis.blob:/opt/iota/config/genesis.blob:ro
      - ./configs/genesis/migration.blob:/opt/iota/config/migration.blob:ro
      - ./data/fullnode-0:/opt/iota/db:rw
    ports:
      - "127.0.0.1:9000:9000/tcp"

  fullnode-1:
    <<: *common-fullnode
    container_name: fullnode-1
    hostname: fullnode-1
    volumes:
      - ./configs/fullnodes/fullnode-1.yaml:/opt/iota/config/fullnode.yaml:ro
      - ./configs/genesis/genesis.blob:/opt/iota/config/genesis.blob:ro
      - ./configs/genesis/migration.blob:/opt/iota/config/migration.blob:ro
      - ./data/fullnode-1:/opt/iota/db:rw
    ports:
      - "127.0.0.1:9001:9000/tcp"

  indexer-writer:
    image: iota-indexer
    container_name: indexer-writer
    hostname: indexer-writer
    restart: on-failure
    environment:
      - RUST_BACKTRACE=1
      - RUST_LOG=info
      - RPC_WORKER_THREAD=12
    command:
      - /usr/local/bin/iota-indexer
      - --db-url=postgres://iota_indexer:iota_indexer@postgres:5432/iota_indexer
      - --rpc-client-url=http://fullnode-0:9000
      - --fullnode-sync-worker
      - --client-metric-port=9181
      - --reset-db
    volumes:
      - ./data/indexer-writer:/opt/iota
    depends_on:
      - fullnode-0
      - postgres

  indexer-reader:
    image: iota-indexer
    container_name: indexer-reader
    hostname: indexer-reader
    restart: on-failure
    environment:
      - RUST_BACKTRACE=1
      - RUST_LOG=info
      - RPC_WORKER_THREAD=12
    command:
      - /usr/local/bin/iota-indexer
      - --db-url=postgres://iota_indexer:iota_indexer@postgres:5432/iota_indexer
      - --rpc-client-url=http://fullnode-0:9000
      - --rpc-server-worker
      - --client-metric-port=9181
    ports:
      - "0.0.0.0:9002:9000/tcp"
    depends_on:
      - fullnode-1
      - postgres
    volumes:
      - ./data/indexer-reader:/opt/iota

  indexer-analytics:
    image: iota-indexer
    container_name: indexer-analytics
    hostname: indexer-analytics
    restart: on-failure
    environment:
      - RUST_BACKTRACE=1
      - RUST_LOG=info
      - RPC_WORKER_THREAD=12
    command:
      - /usr/local/bin/iota-indexer
      - --db-url=postgres://iota_indexer:iota_indexer@postgres:5432/iota_indexer
      - --rpc-client-url=http://fullnode-0:9000
      - --client-metric-port=9181
      - --analytical-worker
    depends_on:
      - fullnode-1
      - postgres
    volumes:
      - ./data/indexer-reader:/opt/iota

  faucet:
    image: iota-tools
    container_name: faucet-1
    hostname: faucet-1
    restart: on-failure
    environment:
      - RUST_BACKTRACE=1
      - RUST_LOG=info
      - RPC_WORKER_THREAD=12
    command:
      - /usr/local/bin/iota-faucet
      - --port=5003
      - --host-ip=0.0.0.0
      - --write-ahead-log=/wal/faucet.wal
      - --num-coins=1
      - --amount=10000000000
    ports:
      - "127.0.0.1:5003:5003/tcp"
    volumes:
      - ./configs/faucet:/root/.iota/iota_config
      - ./data/faucet-1:/wal
    depends_on:
      - fullnode-1

  graphql:
    image: iota-graphql-rpc
    container_name: graphql
    restart: "unless-stopped"
    depends_on:
      - postgres
    environment:
      - RUST_BACKTRACE=1
      - RUST_LOG=info
      - RPC_WORKER_THREAD=12
    command:
      - /opt/iota/bin/iota-graphql-rpc
      - start-server
      - --db-url=postgres://iota_indexer:iota_indexer@postgres:5432/iota_indexer
      - --node-rpc-url=http://fullnode-0:9000
      - --host=0.0.0.0
    ports:
      - "127.0.0.1:9189:9184/tcp"
      - "127.0.0.1:8000:8000/tcp"

  postgres:
    image: postgres:15
    user: postgres
    restart: always
    container_name: postgres
    hostname: postgres
    expose:
      - 5432
    ports:
      - "127.0.0.1:5432:5432"
    environment:
      POSTGRES_USER: iota_indexer
      POSTGRES_PASSWORD: iota_indexer
      POSTGRES_DB: iota_indexer
    command: |
      postgres
      -c 'max_connections=1000'
    volumes:
      - ./data/postgres:/var/lib/postgresql/data
    healthcheck:
      test: "pg_isready -p 5432"
      interval: 30s
      timeout: 15s
      retries: 20
      start_period: 10s

networks:
  default:
    external: true
    name: web